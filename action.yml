name: Release
description: Automated releases via release-please
inputs:
  create-major-minor-tags:
    description: Create major/minor tags automatically on release (e.g. v1, v1.1)
    required: false
    default: "false"
  prerelease:
    description: Create a pre-release (e.g. v1.0.0-0)
    required: false
    default: ${{ github.ref_name == 'dev' }}
  repo-token:
    description: GitHub token (e.g. secrets.GITHUB_TOKEN)
    required: true
  github-app-id:
    description: Installed GitHub App Id (e.g. secrets.UGRC_RELEASE_BOT_APP_ID)
    required: true
  github-app-key:
    description: Installed GitHub App Key (e.g. secrets.UGRC_RELEASE_BOT_APP_KEY)
    required: true
  github-app-name:
    description: Installed GitHub Name (e.g. secrets.UGRC_RELEASE_BOT_NAME)
    required: true
  github-app-email:
    description: Installed GitHub Email (e.g. secrets.UGRC_RELEASE_BOT_EMAIL)
    required: true
  release-type:
    description: Release Please release type
    required: false
    default: node
  extra-files:
    description: Extra files in which release please should bump the version
    required: false
outputs:
  release_created:
    description: A release was successfully created
    value: ${{ steps.release-please.outputs.release_created }}
  released_version:
    description: The version number that was released
    value: ${{ steps.get-next-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: 🪙 Convert token
      uses: actions/create-github-app-token@v1
      id: generate_token
      with:
        app-id: ${{ inputs.github-app-id }}
        private-key: ${{ inputs.github-app-key }}

    - name: ⬇️ Set up code
      uses: actions/checkout@v4
      with:
        show-progress: false
        fetch-depth: 0
        token: ${{ steps.generate_token.outputs.token }}

    - name: ⏩ Get next version
      id: get-next-version
      uses: agrc/get-next-version-action@v1
      with:
        prerelease: ${{ inputs.prerelease }}
        repo-token: ${{ inputs.repo-token }}

    - name: 👇 Ensure config file exists
      shell: bash
      run: touch release-please-config.json

    - name: 🔀 Create and merge Release Please config file
      uses: RadovanPelka/github-action-json@main
      with:
        path: release-please-config.json
        replaceWith: |
          {
            "pull-request-title-pattern": "chore: release v${version}",
            "changelog-types": [
              {"type":"feat","section":"🚀 Features","hidden":false},
              {"type":"fix","section":"🐛 Bug Fixes","hidden":false},
              {"type":"deps","section":"🌲 Dependencies","hidden":false},
              {"type":"docs","section":"📖 Documentation Improvements","hidden":false},
              {"type":"style","section":"🎨 Design Improvements","hidden":false},
              {"type":"ci","section":"⚙️ Continuous Integration Changes","hidden":true},
              {"type":"chore","section":"🧰 Maintenance","hidden":true}
            ],
            "prerelease": "${{ inputs.prerelease }}",
            "release-as": "${{ steps.get-next-version.outputs.version }}",
            "extra-files": "${{ inputs.extra-files }}"
          }

    - name: 🚀 Create release
      uses: google-github-actions/release-please-action@v4
      id: release-please
      with:
        token: ${{ steps.generate_token.outputs.token }}
        release-type: ${{ inputs.release-type }}
        config-file: release-please-config.json
        target-branch: ${{ github.ref_name }}

    - name: 🔑 Set git user
      shell: bash
      run: |
        git config user.name "${{ inputs.github-app-name }}"
        git config user.email "${{ inputs.github-app-email }}"

    - name: 🏷️ Tag major and minor versions
      shell: bash
      if: ${{ inputs.create-major-minor-tags == 'true' && steps.release-please.outputs.release_created == 'true' && inputs.prerelease != 'true' }}
      run: |
        echo "deleting existing tags, if any"
        git tag -d v${{ steps.release-please.outputs.major }} || true
        git tag -d v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} || true
        git push origin :v${{ steps.release-please.outputs.major }} || true
        git push origin :v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} || true
        echo "creating new tags"
        git tag -a v${{ steps.release-please.outputs.major }} -m "Release v${{ steps.release-please.outputs.major }}"
        git tag -a v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} -m "Release v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}"
        git push origin v${{ steps.release-please.outputs.major }}
        git push origin v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}
